stages:
  - build
  - deploy-production

variables:
  IMAGE_TAG: $CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA
  IMAGE_URL: $SSC_REGISTRY_URL/$CI_PROJECT_PATH:$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
  
var-check:
  stage: build
  image:
    name: reg.aichallenge.ir/alpine:latest
    entrypoint: [""]

  before_script:
    - echo "service == $SERVICE_NAME"
    - echo "reg ====== $SSC_REGISTRY_URL"
    - echo "image tag == $IMAGE_TAG"
    - echo "image url == $IMAGE_URL"
  script:
   - echo "ip ======== $SWARM_MANAGER_SERVER"
  
build:
  stage: build
  image: reg.aichallenge.ir/docker:19.03.12
  tags:
    - docker
  script:
    - docker build . -t $IMAGE_URL
    - docker push $IMAGE_URL


deploy-production:
  stage: deploy-production
  image: kroniak/ssh-client:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  before_script:
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - FINAL_SERVICE_NAME=infra_$SERVICE_NAME
  script:     
    - ssh -i $SSH_PRIVATE_KEY -o "StrictHostKeyChecking=no" ubuntu@94.101.187.20 -t "docker service update --image $IMAGE_URL $FINAL_SERVICE_NAME"


# deploy-production:
#   stage: deploy-production
#   image: kroniak/ssh-client:latest
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: on_success
#   before_script:
#     - mkdir -p ~/.ssh
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#     - chmod 700 ~/.ssh/id_rsa
#     - eval "$(ssh-agent -s)"
#     - ssh-add ~/.ssh/id_rsa
#     - FINAL_SERVICE_NAME=infra_$SERVICE_NAME
#   script:
#     - ssh -o "StrictHostKeyChecking=no" root@$SWARM_MANAGER_SERVER -p$SWARM_MANAGER_SERVER_SSH_PORT -t "docker service update --image $IMAGE_URL $FINAL_SERVICE_NAME"

